%strong
  Title class
%br
use this clas to set title property in chart.
%br
Available propertis:
%ul
  %li
    text
    %br
    Set this with any string. Default value "" (empty string).
    -#= link_to "text", {:controller => '/documentations/title', :action => :text }
  %li
    style
    %br
    set this with css like string. Default value "{font-size: 20px; color: #FF0F0F; text-align: center;}".
    %br
    A css string can optionally contain:
    %ul
      %li
        font-size
      %li
        font-family
      %li
        font-weight
      %li
        color
      %li
        background-color
      %li
        text-align
      %li
        margin
      %li
        margin-left
      %li
        margin-right
      %li
        margin-top
      %li
        margin-bottom
      %li
        padding
      %li
        padding-left
      %li
        padding-right
      %li
        padding-top
      %li
        padding-bottom
    -#= link_to "style", {:controller => '/documentations/title', :action => :style }
.tip.example
  .description
    set propertis during initialization
  .code
    - @code = 'OFC2::Graph.new('
    - @code << "\n"
    - @code << ':title => OFC2::Title.new( :text => "simle chart" , :style => "{font-size: 14px; color: #b50F0F; text-align: center;}")'
    - @code << "\n"
    - @code << ')'
    - @code << "\n"
    .code_example
      %pre{:class => "brush: ruby;"}=@code
  .description
    use methods to set propertis
  .code
    - @code = 'title = OFC2::Title.new'
    - @code << "\n"
    - @code << 'title.text = "some text"'
    - @code << "\n"
    - @code << 'title.style = "css like style"'
    - @code << "\n"
    - @code << 'graph = OFC2::Graph.new'
    - @code << "\n"
    - @code << 'graph.title = title'
    .code_example
      %pre{:class => "brush: ruby;"}=@code
